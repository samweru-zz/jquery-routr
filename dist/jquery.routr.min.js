/*
 * jQuery routr - v1.0.0
 * Javascript Router
 *
 * Copyright (c) 2019 Samuel Weru
 * Released under the MIT license
 */
String.prototype.test = function(t) {
    return new RegExp(t).test(this.toString());
}, function(n) {
    window.Routr = function() {
        this.options = n.extend({}, {
            routes: [],
            aliases: [],
            current: "",
            _useHashStateChange: !1
        });
    }, window.Routr.prototype = {
        constructor: Routr,
        add: function(t, o, s) {
            "function" == typeof o && (s = o, o = void 0), void 0 === o && (o = "route".concat(Object.keys(this.options.routes).length)), 
            void 0 === this.options.routes[t] && (this.options.routes[t] = []);
            var e = [], i = [];
            t.match(/\{/) && (e = t.split("/"), n.each(e, function(t, o) {
                var s = o.match(/\{(\w+)(?:\:(int|float|date|string|bool)\}|\})/i);
                if (s) switch (s[1] || s[2]) {
                  case "int":
                    i.push("[0-9]+");
                    break;

                  case "float":
                    i.push("[+-]?d+(.d+)?");
                    break;

                  case "date":
                    //yyyy-mm-dd
                    i.push("[0-9]{4}-(1[0-2]|0[1-9]|[1-9])-([0-9]|0[1-9]|[1-2][0-9]|3[0-1])");
                    break;

                  case "string":
                    i.push("[A-Za-z0-9]+");
                    break;

                  case "bool":
                    i.push("(true|false)");
                } else i.push(o);
            })), this.options.aliases[o] = t, this.options.routes[t] = {
                route: t,
                callback: s,
                alias: o,
                pattern: i.join("/")
            };
        },
        remove: function(t) {
            var o = this.options.routes[t].alias;
            delete this.options.aliases[o], delete this.options.routes[t];
        },
        execute: function(r) {
            if (this.options.current = r, void 0 === this.options.routes[r]) {
                var h = this.options;
                n.each(Object.keys(h.routes), function(t, o) {
                    var s = [], e = h.routes[o].pattern;
                    if (r.test("^".concat(e.concat("$")))) {
                        var i, n = o.split("/"), a = r.split("/");
                        for (i in n) n[i] != a[i] && s.push(a[i]);
                        return s.length && h.routes[o].callback.apply(this, s), !1;
                    }
                });
            } else this.options.routes[r].callback();
            this.options._useHashStateChange && (window.location.hash = this.options.current);
        },
        run: function() {
            if (this.options._useHashStateChange = !0, Object.keys(this.options.routes).length) {
                var t = this;
                n(window).bind("hashchange", function() {
                    t.execute(window.location.hash.replace(/#\/|#/g, ""));
                });
            }
            var o = window.location.hash.replace(/#\/|#/g, "");
            o && this.execute(o);
        }
    };
}(jQuery);